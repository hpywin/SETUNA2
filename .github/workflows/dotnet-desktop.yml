name: .NET Build and Test
on:
  push:

env:
  App_Name: SETUNA
  Solution_Path: SETUNA.sln
  App_Project_Path: SETUNA/SETUNA.csproj

jobs:
  dbg:
    strategy:
      matrix:
        configuration: [Release]  # [Debug, Release]
        platform: ["Any CPU", x64, x86]
    runs-on: windows-latest
    timeout-minutes: 15
    if: contains( github.ref , 'tags/dbg')

    steps:

      - name: Exclude space from platform name1
        shell: bash
        run: |
            platform="${{ matrix.platform }}"
            echo $platform
            echo "platform=${platform// /}" >> $GITHUB_ENV

      - name: Exclude space from platform name2
        shell: bash
        run: |
            echo ${{ env.platform }} 
            echo $env:platform

  build:
    strategy:
        matrix:
          configuration: [Release]  # [Debug, Release]
          platform: ["Any CPU", x64, x86]
    runs-on: windows-latest
    timeout-minutes: 15
    if: contains( github.ref , 'tags/v')

    steps:

      # Dump for debug workflow
      - name: Dump Github Context
        env:
          GitHub_Context: ${{ toJson(github) }}
        run: echo "${GitHub_Context}"

      # Checks-out repository under $GITHUB_WORKSPACE: https://github.com/actions/checkout
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
       
      # Add MsBuild to the PATH: https://github.com/microsoft/setup-msbuild
      - name: Setup MSBuild.exe
        uses: microsoft/setup-msbuild@v2.0.0

      # Setup NuGet.exe for use with actions
      - name: Setup NuGet
        uses: NuGet/setup-nuget@v2.0.0
        
      - name: Restore NuGet Packages
        run: nuget restore ${{ env.Solution_Path }}
                 
      - name: Build App
        # run: msbuild ${{ env.Solution_Path }} /p:Configuration=$env:Configuration
        run: msbuild ${{ env.Solution_Path }} /p:Configuration=${{ matrix.configuration }} /p:Platform="${{ matrix.platform }}"
        env:
          Configuration: ${{ matrix.configuration }}
        
      - name: Run vstests
        uses: microsoft/vstest-action@v1.0.0
        with:
          testAssembly: SETUNATests.dll
          # searchFolder:  .\SETUNATests\bin\${{ matrix.configuration }}\
          # file output x86, x64 : bin\[x86,x64]\release , any cpu : bin\release
          searchFolder: |
              .\SETUNATests\bin\${{ matrix.configuration }}\
              .\SETUNATests\bin\${{ matrix.platform }}\${{ matrix.configuration }}\  
          runInParallel: true
      
      - name: Exclude space from platform name
        shell: bash
        run: |
            platform="${{ matrix.platform }}"
            echo $platform
            echo "platform=${platform// /}" >> $GITHUB_ENV

      # - name: Exclude space from platform name
      #   shell: bash
      #   run: |
      #       echo ${{ env.platform }}

      # Upload Actions Artifacts: https://github.com/actions/upload-artifact
      - name: Archive publish files
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.App_Name }}_${{ matrix.configuration }}_${{ env.platform }}
          path: |
               .\publish\${{ env.App_Name }}_*.zip
        
  create-release:  
    runs-on: windows-latest
    timeout-minutes: 15
    needs: [build]
    if: contains( github.ref , 'tags/v')

    steps:

      - name: Get version
        shell: bash
        run: |
          echo "ver=${GITHUB_REF/refs\/tags\/v/}" >> $GITHUB_ENV

      - name: Get files
        uses: actions/download-artifact@v4

      # - name: List Files
      #   run: ls -R
      
      # Create release page: https://github.com/ncipollo/release-action
      - name: Create release
        id: create_release
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: v${{ env.ver }}
          name: Ver ${{ env.ver }}
          body: |
            - Change design
            - Bug fix
          draft: true
          prerelease: false
          artifacts: ${{ env.App_Name }}_*\${{ env.App_Name }}_*.zip
      
      # Remove artifacts to save space: https://github.com/c-hive/gha-remove-artifacts
      - name: Remove old artifacts
        uses: c-hive/gha-remove-artifacts@v1
        with:
          age: '1 weeks'
          skip-recent: 2
